apiVersion: v1
kind: Namespace
metadata:
  name: debug
---
# create an service account used by router and rbac can bind role to
apiVersion: v1
kind: ServiceAccount
metadata:
  name: debugger
  namespace: debug
---
# rbac role definition
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: debugger
rules:
- apiGroups: [""]
  resources: ["services", "pods", "nodes", "namespaces"]
  verbs: ["get", "watch", "list"]
---
# rbac role binding to service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: debugger
subjects:
- kind: ServiceAccount
  name: debugger # ServiceAccount name
  namespace: debug
roleRef:
  kind: ClusterRole
  name: debugger # rbac role definition name
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: privileged
  namespace: debug
spec:
  selector:
    matchLabels:
      name: privileged-container
  template:
    metadata:
      labels:
        name: privileged-container
    spec:
      serviceAccountName: debugger
      containers:
      - name: a-container
        image: ubuntu:18.04
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
        stdin: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-root-volume
          mountPath: /host
          readOnly: false
      volumes:
      - name: host-root-volume
        hostPath:
          path: /
      hostNetwork: true
      hostPID: true
      restartPolicy: Always

